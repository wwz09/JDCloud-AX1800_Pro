name: 清理工作流和发布文件

# 仅允许手动触发
on:
  workflow_dispatch:
    inputs:
      workflow_name:
        description: '要删除的工作流名称（如：编译指定设备OpenWrt固件）'
        required: true
        type: string
      delete_releases:
        description: '是否同时删除关联的发布和标签'
        required: true
        type: boolean
        default: true
      confirm_deletion:
        description: '确认执行删除操作（输入 "DELETE" 确认）'
        required: true
        type: string

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      actions: write  # 允许删除工作流运行记录
      contents: write  # 允许删除发布和标签
    if: ${{ github.event.inputs.confirm_deletion == 'DELETE' }}  # 确保用户确认删除

    steps:
      - name: 检查GitHub CLI
        run: |
          if ! command -v gh &> /dev/null; then
            echo "安装GitHub CLI"
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh -y
          fi
          gh --version

      - name: 配置GitHub认证
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh auth status

      - name: 获取要删除的工作流ID
        id: get_workflow_id
        run: |
          WORKFLOW_ID=$(gh api repos/${{ github.repository }}/actions/workflows | jq -r ".workflows[] | select(.name == \"${{ github.event.inputs.workflow_name }}\") | .id")
          if [ -z "$WORKFLOW_ID" ]; then
            echo "未找到名称为 '${{ github.event.inputs.workflow_name }}' 的工作流"
            exit 1
          fi
          echo "WORKFLOW_ID=$WORKFLOW_ID" >> $GITHUB_OUTPUT
          echo "找到工作流ID: $WORKFLOW_ID"

      - name: 删除工作流运行记录
        run: |
          # 获取所有工作流运行ID
          RUN_IDS=$(gh api repos/${{ github.repository }}/actions/workflows/${{ steps.get_workflow_id.outputs.WORKFLOW_ID }}/runs | jq -r '.workflow_runs[]?.id')
          
          if [ -z "$RUN_IDS" ]; then
            echo "没有找到该工作流的运行记录"
          else
            echo "找到以下运行记录ID: $RUN_IDS"
            # 逐个删除运行记录
            for RUN_ID in $RUN_IDS; do
              echo "删除运行记录: $RUN_ID"
              gh api --method DELETE repos/${{ github.repository }}/actions/runs/$RUN_ID
              sleep 1  # 避免API请求过于频繁
            done
          fi

      - name: 删除关联的发布和标签
        if: ${{ github.event.inputs.delete_releases == true }}
        run: |
          # 获取所有发布
          RELEASES=$(gh api repos/${{ github.repository }}/releases | jq -r '.[]?.tag_name')
          
          if [ -z "$RELEASES" ]; then
            echo "没有找到发布记录"
          else
            echo "找到以下发布标签: $RELEASES"
            # 逐个删除发布和标签
            for TAG in $RELEASES; do
              echo "删除发布: $TAG"
              gh release delete "$TAG" -y
              echo "删除标签: $TAG"
              gh api --method DELETE repos/${{ github.repository }}/git/refs/tags/$TAG
              sleep 1  # 避免API请求过于频繁
            done
          fi

      - name: 清理完成
        run: |
          echo "工作流清理完成!"
          echo "已删除工作流: ${{ github.event.inputs.workflow_name }}"
          echo "工作流ID: ${{ steps.get_workflow_id.outputs.WORKFLOW_ID }}"
          echo "是否删除发布: ${{ github.event.inputs.delete_releases }}"
    
